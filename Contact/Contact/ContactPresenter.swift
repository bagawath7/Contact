//
//  ContactPresenter.swift
//  Contact
//
//  Created by zs-mac-4 on 19/12/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

protocol ContactPresentationLogic:AnyObject
{
    func presentContacts(contacts:contact.Request)
}

class ContactPresenter: ContactPresentationLogic
{
    func presentContacts(contacts: contact.Request) {
        var contactsDict:[Character:[NSManagedObject]] = [:]

        for contact in contacts.contacts {
         let name = contact.value(forKey: "fullname") as! String
         let char = name[name.index(name.startIndex, offsetBy: 0)]
            if let _ = contactsDict[char] {
                contactsDict[char]?.append(contact)
                
            }
            else{
                contactsDict[char] = [contact]
            }
        }
        var dict = contactsDict.sorted ( by: { $0.0 < $1.0 })
         dict = dict.filter { (key,value) in
            !value.isEmpty
        }
        
        self.viewController?.updateContacts(contacts: contacts.contacts, contactsDictArray: dict)
        
    }
    
    
    
  weak var viewController: ContactDisplayLogic?
  

 
}
